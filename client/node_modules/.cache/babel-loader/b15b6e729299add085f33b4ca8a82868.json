{"ast":null,"code":"import CartActionTypes from './cart.types';\nimport { addItemToCart, removeItemFromCart, fillCartOnLogin } from './cart.utils';\nconst initialState = {\n  cartItems: [],\n  cartTotal: 0\n};\n\nconst cartReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CartActionTypes.ADD_TO_CART:\n      return { ...state,\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      };\n\n    case CartActionTypes.REMOVE_FROM_CART:\n      return { ...state,\n        cartItems: removeItemFromCart(state.cartItems, action.payload)\n      };\n\n    case CartActionTypes.FILL_CART_ON_LOGIN:\n      return { ...state,\n        cartItems: fillCartOnLogin(state.cartItems, action.payload)\n      };\n\n    case CartActionTypes.CLEAR_ITEM:\n      return { ...state,\n        cartItems: state.cartItems.filter(cartItem => cartItem._id !== action.payload._id)\n      };\n\n    case CartActionTypes.CLEAR_CART:\n      return { ...state,\n        cartItems: []\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/isabel/Documents/grocery-us/client/src/redux/cart/cart.reducer.js"],"names":["CartActionTypes","addItemToCart","removeItemFromCart","fillCartOnLogin","initialState","cartItems","cartTotal","cartReducer","state","action","type","ADD_TO_CART","payload","REMOVE_FROM_CART","FILL_CART_ON_LOGIN","CLEAR_ITEM","filter","cartItem","_id","CLEAR_CART"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,SAASC,aAAT,EAAwBC,kBAAxB,EAA4CC,eAA5C,QAAmE,cAAnE;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE,EADM;AAEjBC,EAAAA,SAAS,EAAE;AAFM,CAArB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAClD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKV,eAAe,CAACW,WAArB;AACI,aAAO,EACH,GAAGH,KADA;AAEHH,QAAAA,SAAS,EAAEJ,aAAa,CAACO,KAAK,CAACH,SAAP,EAAkBI,MAAM,CAACG,OAAzB;AAFrB,OAAP;;AAIJ,SAAKZ,eAAe,CAACa,gBAArB;AACI,aAAO,EACH,GAAGL,KADA;AAEHH,QAAAA,SAAS,EAAEH,kBAAkB,CAACM,KAAK,CAACH,SAAP,EAAkBI,MAAM,CAACG,OAAzB;AAF1B,OAAP;;AAIJ,SAAKZ,eAAe,CAACc,kBAArB;AACI,aAAO,EACH,GAAGN,KADA;AAEHH,QAAAA,SAAS,EAAEF,eAAe,CAACK,KAAK,CAACH,SAAP,EAAkBI,MAAM,CAACG,OAAzB;AAFvB,OAAP;;AAIJ,SAAKZ,eAAe,CAACe,UAArB;AACI,aAAO,EACH,GAAGP,KADA;AAEHH,QAAAA,SAAS,EAAEG,KAAK,CAACH,SAAN,CAAgBW,MAAhB,CACXC,QAAQ,IAAIA,QAAQ,CAACC,GAAT,KAAiBT,MAAM,CAACG,OAAP,CAAeM,GADjC;AAFR,OAAP;;AAMJ,SAAKlB,eAAe,CAACmB,UAArB;AACI,aAAO,EACH,GAAGX,KADA;AAEHH,QAAAA,SAAS,EAAE;AAFR,OAAP;;AAIJ;AACI,aAAOG,KAAP;AA7BR;AA+BH,CAhCD;;AAkCA,eAAeD,WAAf","sourcesContent":["import CartActionTypes from './cart.types';\n\nimport { addItemToCart, removeItemFromCart, fillCartOnLogin } from './cart.utils'\n\nconst initialState = {\n    cartItems: [],\n    cartTotal: 0\n}\n\nconst cartReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case CartActionTypes.ADD_TO_CART:\n            return {\n                ...state,\n                cartItems: addItemToCart(state.cartItems, action.payload)\n            }\n        case CartActionTypes.REMOVE_FROM_CART:\n            return {\n                ...state,\n                cartItems: removeItemFromCart(state.cartItems, action.payload)\n            }\n        case CartActionTypes.FILL_CART_ON_LOGIN:\n            return {\n                ...state,\n                cartItems: fillCartOnLogin(state.cartItems, action.payload)\n            }\n        case CartActionTypes.CLEAR_ITEM:\n            return {\n                ...state,\n                cartItems: state.cartItems.filter(\n                cartItem => cartItem._id !== action.payload._id\n                )\n            };\n        case CartActionTypes.CLEAR_CART:\n            return {\n                ...state,\n                cartItems: []\n            }\n        default:\n            return state;\n    }\n}\n\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}