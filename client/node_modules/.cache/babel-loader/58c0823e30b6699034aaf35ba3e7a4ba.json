{"ast":null,"code":"var _jsxFileName = \"/Users/isabel/Documents/grocery-us/client/src/pages/register/register.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'react-bootstrap';\nimport axios from 'axios';\nimport { Redirect } from 'react-router';\nimport CustomButton from '../../components/custom-button/custom-button.component';\nimport FormInput from '../../components/form-input/form-input.component';\nimport { setCurrentUser } from '../../redux/user/user.actions';\nimport './register.styles.scss';\n\nclass RegisterPage extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const {\n        name,\n        address1,\n        address2,\n        towncity,\n        postcode,\n        email,\n        password\n      } = this.state;\n      const {\n        setCurrentUser\n      } = this.props;\n      axios({\n        url: 'register/newuser',\n        method: 'post',\n        data: {\n          name,\n          address1,\n          address2,\n          towncity,\n          postcode,\n          email,\n          password\n        }\n      }).then(response => {\n        const user = response.data;\n        setCurrentUser(user);\n        this.setState({\n          redirect: true\n        });\n      }).catch(error => {\n        console.log(error);\n        alert('There was an error, please try again.');\n      });\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      name: '',\n      address1: '',\n      address2: '',\n      towncity: '',\n      postcode: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      redirect: false\n    };\n  }\n\n  render() {\n    const {\n      name,\n      address1,\n      address2,\n      towncity,\n      postcode,\n      email,\n      password,\n      confirmPassword,\n      redirect\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"background\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6 mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      className: \"registration-form\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"register-heading mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 29\n      }\n    }, \"Register\"), /*#__PURE__*/React.createElement(FormInput, {\n      label: \"Name\",\n      type: \"text\",\n      placeholder: \"Name\",\n      controlId: \"name\",\n      name: \"name\",\n      value: name,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      label: \"Address\",\n      type: \"text\",\n      placeholder: \"Address Line 1\",\n      controlId: \"Address\",\n      name: \"address1\",\n      value: address1,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      label: \"\",\n      type: \"text\",\n      placeholder: \"Address Line 2\",\n      controlId: \"Address\",\n      name: \"address2\",\n      value: address2,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      label: \"Town/City\",\n      type: \"text\",\n      placeholder: \"Town/City\",\n      controlId: \"Address\",\n      name: \"towncity\",\n      value: towncity,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      label: \"Postcode\",\n      type: \"text\",\n      placeholder: \"Postcode\",\n      controlId: \"Address\",\n      name: \"postcode\",\n      value: postcode,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      label: \"Email\",\n      type: \"email\",\n      placeholder: \"Email\",\n      controlId: \"Email\",\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      label: \"Password\",\n      type: \"password\",\n      placeholder: \"Password\",\n      controlId: \"Password\",\n      name: \"password\",\n      value: password,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      label: \"Confirm\",\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      controlId: \"Password\",\n      name: \"confirmpassword\",\n      value: confirmPassword,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row justify-content-end register-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      isRegister: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 25\n      }\n    }, \"Register\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 25\n      }\n    }), redirect && /*#__PURE__*/React.createElement(Redirect, {\n      to: '/shop',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 29\n      }\n    }))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n});\n\nexport default connect(null, mapDispatchToProps)(RegisterPage);","map":{"version":3,"sources":["/Users/isabel/Documents/grocery-us/client/src/pages/register/register.component.jsx"],"names":["React","connect","Form","axios","Redirect","CustomButton","FormInput","setCurrentUser","RegisterPage","Component","constructor","handleSubmit","event","preventDefault","name","address1","address2","towncity","postcode","email","password","state","props","url","method","data","then","response","user","setState","redirect","catch","error","console","log","alert","handleChange","value","target","confirmPassword","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'react-bootstrap';\nimport axios from 'axios';\nimport { Redirect } from 'react-router';\n\nimport CustomButton from '../../components/custom-button/custom-button.component';\nimport FormInput from '../../components/form-input/form-input.component';\n\nimport { setCurrentUser } from '../../redux/user/user.actions';\n\nimport './register.styles.scss'\n\nclass RegisterPage extends React.Component {\n    constructor(){\n        super();\n\n        this.state = {\n            name: '',\n            address1: '',\n            address2: '',\n            towncity: '',\n            postcode: '',\n            email: '',\n            password: '',\n            confirmPassword: '',\n            redirect: false\n        }\n    }\n    \n\n    handleSubmit = event => {\n        event.preventDefault();\n\n        const { name, address1, address2, towncity, postcode, email, password } = this.state;\n        const { setCurrentUser } = this.props\n       \n        axios({\n            url: 'register/newuser',\n            method: 'post',\n            data: {\n                name,\n                address1,\n                address2,\n                towncity,\n                postcode,\n                email,\n                password\n            }\n        }).then(response => {\n            const user = response.data;\n            setCurrentUser(user)\n            this.setState({redirect: true})\n        }).catch(error => {\n            console.log(error);\n            alert('There was an error, please try again.')\n        });\n    }\n\n    handleChange = event => {\n        const { name, value } = event.target;\n\n        this.setState({ [name]: value });\n    }\n\n    render() {\n        const { name, address1, address2, towncity, postcode, email, password, confirmPassword, redirect } = this.state;\n        return (\n            <div className=\"background\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-3\"></div>\n                        <div className=\"col-6 mt-5\">\n                        <Form className='registration-form' onSubmit={this.handleSubmit}>\n    \n                            <h1 className=\"register-heading mb-5\">Register</h1>\n                        \n                            <FormInput\n                                label=\"Name\"\n                                type=\"text\"\n                                placeholder=\"Name\"\n                                controlId=\"name\"\n                                name=\"name\"\n                                value={name}\n                                onChange={this.handleChange}\n                                required\n                            />\n                            <FormInput\n                                label=\"Address\"\n                                type=\"text\"\n                                placeholder=\"Address Line 1\"\n                                controlId=\"Address\"\n                                name=\"address1\"\n                                value={address1}\n                                onChange={this.handleChange}\n                                required\n                            />\n                            <FormInput\n                                label=\"\"\n                                type=\"text\"\n                                placeholder=\"Address Line 2\"\n                                controlId=\"Address\"\n                                name=\"address2\"\n                                value={address2}\n                                onChange={this.handleChange}\n                            />\n                            <FormInput\n                                label=\"Town/City\"\n                                type=\"text\"\n                                placeholder=\"Town/City\"\n                                controlId=\"Address\"\n                                name=\"towncity\"\n                                value={towncity}\n                                onChange={this.handleChange}\n                                required\n                            />\n                            <FormInput\n                                label=\"Postcode\"\n                                type=\"text\"\n                                placeholder=\"Postcode\"\n                                controlId=\"Address\"\n                                name=\"postcode\"\n                                value={postcode}\n                                onChange={this.handleChange}\n                                required\n                            />\n                            <FormInput\n                                label=\"Email\"\n                                type=\"email\"\n                                placeholder=\"Email\"\n                                controlId=\"Email\"\n                                name=\"email\"\n                                value={email}\n                                onChange={this.handleChange}\n                                required\n                            />\n                            <FormInput\n                                label=\"Password\"\n                                type=\"password\"\n                                placeholder=\"Password\"\n                                controlId=\"Password\"\n                                name=\"password\"\n                                value={password}\n                                onChange={this.handleChange}\n                                required\n                            />\n                            <FormInput\n                                label=\"Confirm\"\n                                type=\"password\"\n                                placeholder=\"Confirm Password\"\n                                controlId=\"Password\"\n                                name=\"confirmpassword\"\n                                value={confirmPassword}\n                                onChange={this.handleChange}\n                                required\n                            />\n    \n                        <div className=\"row justify-content-end register-button\">\n                        <CustomButton isRegister>\n                            Register\n                        </CustomButton>\n                        </div>\n                        </Form>\n                        </div>\n                        <div className=\"col-3\"></div>\n                        {redirect && (\n                            <Redirect to={'/shop'}/>\n                        )}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    setCurrentUser: user => dispatch(setCurrentUser(user))\n  });\n\nexport default connect(null, mapDispatchToProps)(RegisterPage);"]},"metadata":{},"sourceType":"module"}